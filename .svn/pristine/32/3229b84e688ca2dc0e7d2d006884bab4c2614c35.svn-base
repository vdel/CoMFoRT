<?xml version="1.0" encoding="ascii"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
          "DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>modules.test</title>
  <link rel="stylesheet" href="epydoc.css" type="text/css" />
  <script type="text/javascript" src="epydoc.js"></script>
</head>

<body bgcolor="white" text="black" link="blue" vlink="#204080"
      alink="#204080">
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Project homepage -->
      <th class="navbar" align="right" width="100%">
        <table border="0" cellpadding="0" cellspacing="0">
          <tr><th class="navbar" align="center"
            ><a class="navbar" target="_top" href="http://graal.ens-lyon.fr/comfort/">CoMFoRT</a></th>
          </tr></table></th>
  </tr>
</table>
<table width="100%" cellpadding="0" cellspacing="0">
  <tr valign="top">
    <td width="100%">
      <span class="breadcrumbs">
        <a href="modules-module.html">Package&nbsp;modules</a> ::
        Module&nbsp;test
      </span>
    </td>
    <td>
      <table cellpadding="0" cellspacing="0">
        <!-- hide/show private -->
        <tr><td align="right"><span class="options">[<a href="javascript:void(0);" class="privatelink"
    onclick="toggle_private();">hide&nbsp;private</a>]</span></td></tr>
        <tr><td align="right"><span class="options"
            >[<a href="frames.html" target="_top">frames</a
            >]&nbsp;|&nbsp;<a href="modules.test-pysrc.html"
            target="_top">no&nbsp;frames</a>]</span></td></tr>
      </table>
    </td>
  </tr>
</table>
<h1 class="epydoc">Source Code for <a href="modules.test-module.html">Module modules.test</a></h1>
<pre class="py-src">
<a name="L1"></a><tt class="py-lineno"> 1</tt>  <tt class="py-line"><tt class="py-comment"># -*- encoding: utf-8 -*-</tt> </tt>
<a name="L2"></a><tt class="py-lineno"> 2</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-keyword">import</tt> <tt class="py-name">os</tt> </tt>
<a name="L3"></a><tt class="py-lineno"> 3</tt>  <tt class="py-line"><tt class="py-name">os</tt><tt class="py-op">.</tt><tt class="py-name">chdir</tt><tt class="py-op">(</tt><tt class="py-string">'..'</tt><tt class="py-op">)</tt> </tt>
<a name="L4"></a><tt class="py-lineno"> 4</tt>  <tt class="py-line"> </tt>
<a name="L5"></a><tt class="py-lineno"> 5</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt class="py-name">gettext</tt> </tt>
<a name="L6"></a><tt class="py-lineno"> 6</tt>  <tt class="py-line"><tt class="py-name">gettext</tt><tt class="py-op">.</tt><tt class="py-name">install</tt><tt class="py-op">(</tt><tt class="py-string">'comfort'</tt><tt class="py-op">)</tt> </tt>
<a name="L7"></a><tt class="py-lineno"> 7</tt>  <tt class="py-line"><tt id="link-0" class="py-name" targets="Variable modules.test._=modules.test-module.html#_"><a title="modules.test._" class="py-name" href="#" onclick="return doclink('link-0', '_', 'link-0');">_</a></tt> <tt class="py-op">=</tt> <tt class="py-name">gettext</tt><tt class="py-op">.</tt><tt class="py-name">lgettext</tt> </tt>
<a name="L8"></a><tt class="py-lineno"> 8</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt id="link-1" class="py-name" targets="Module modules.module_manager=modules.module_manager-module.html"><a title="modules.module_manager" class="py-name" href="#" onclick="return doclink('link-1', 'module_manager', 'link-1');">module_manager</a></tt> </tt>
<a name="L9"></a><tt class="py-lineno"> 9</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt id="link-2" class="py-name" targets="Module modules.module_interfaces=modules.module_interfaces-module.html"><a title="modules.module_interfaces" class="py-name" href="#" onclick="return doclink('link-2', 'module_interfaces', 'link-2');">module_interfaces</a></tt> </tt>
<a name="L10"></a><tt class="py-lineno">10</tt>  <tt class="py-line"> </tt>
<a name="L11"></a><tt class="py-lineno">11</tt>  <tt class="py-line"> </tt>
<a name="L12"></a><tt class="py-lineno">12</tt>  <tt class="py-line"><tt class="py-comment">## Required step to use the module manager</tt> </tt>
<a name="L13"></a><tt class="py-lineno">13</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment">#&#233;tape requise pour utiliser le gestionnaire de modules</tt> </tt>
<a name="L14"></a><tt class="py-lineno">14</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt id="link-3" class="py-name" targets="Variable cgibin.admin.mm=cgibin.admin-module.html#mm,Variable cgibin.adminvalid.mm=cgibin.adminvalid-module.html#mm,Variable cgibin.handler.mm=cgibin.handler-module.html#mm,Variable modules.test.mm=modules.test-module.html#mm"><a title="cgibin.admin.mm
cgibin.adminvalid.mm
cgibin.handler.mm
modules.test.mm" class="py-name" href="#" onclick="return doclink('link-3', 'mm', 'link-3');">mm</a></tt> <tt class="py-op">=</tt> <tt id="link-4" class="py-name"><a title="modules.module_manager" class="py-name" href="#" onclick="return doclink('link-4', 'module_manager', 'link-1');">module_manager</a></tt><tt class="py-op">.</tt><tt id="link-5" class="py-name" targets="Function modules.module_manager.ModuleManager()=modules.module_manager-module.html#ModuleManager"><a title="modules.module_manager.ModuleManager" class="py-name" href="#" onclick="return doclink('link-5', 'ModuleManager', 'link-5');">ModuleManager</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L15"></a><tt class="py-lineno">15</tt>  <tt class="py-line"><tt id="link-6" class="py-name" targets="Variable modules.test.mm2=modules.test-module.html#mm2"><a title="modules.test.mm2" class="py-name" href="#" onclick="return doclink('link-6', 'mm2', 'link-6');">mm2</a></tt> <tt class="py-op">=</tt> <tt id="link-7" class="py-name"><a title="modules.module_manager" class="py-name" href="#" onclick="return doclink('link-7', 'module_manager', 'link-1');">module_manager</a></tt><tt class="py-op">.</tt><tt id="link-8" class="py-name"><a title="modules.module_manager.ModuleManager" class="py-name" href="#" onclick="return doclink('link-8', 'ModuleManager', 'link-5');">ModuleManager</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L16"></a><tt class="py-lineno">16</tt>  <tt class="py-line"><tt class="py-keyword">print</tt> <tt id="link-9" class="py-name"><a title="cgibin.admin.mm
cgibin.adminvalid.mm
cgibin.handler.mm
modules.test.mm" class="py-name" href="#" onclick="return doclink('link-9', 'mm', 'link-3');">mm</a></tt> <tt class="py-keyword">is</tt> <tt id="link-10" class="py-name"><a title="modules.test.mm2" class="py-name" href="#" onclick="return doclink('link-10', 'mm2', 'link-6');">mm2</a></tt> </tt>
<a name="L17"></a><tt class="py-lineno">17</tt>  <tt class="py-line"> </tt>
<a name="L18"></a><tt class="py-lineno">18</tt>  <tt class="py-line"><tt class="py-keyword">print</tt> <tt id="link-11" class="py-name"><a title="cgibin.admin.mm
cgibin.adminvalid.mm
cgibin.handler.mm
modules.test.mm" class="py-name" href="#" onclick="return doclink('link-11', 'mm', 'link-3');">mm</a></tt><tt class="py-op">.</tt><tt id="link-12" class="py-name" targets="Static Method modules.module_manager._ModuleManager.get_available_modules()=modules.module_manager._ModuleManager-class.html#get_available_modules"><a title="modules.module_manager._ModuleManager.get_available_modules" class="py-name" href="#" onclick="return doclink('link-12', 'get_available_modules', 'link-12');">get_available_modules</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L19"></a><tt class="py-lineno">19</tt>  <tt class="py-line"><tt class="py-keyword">print</tt> </tt>
<a name="L20"></a><tt class="py-lineno">20</tt>  <tt class="py-line"> </tt>
<a name="L21"></a><tt class="py-lineno">21</tt>  <tt class="py-line"><tt class="py-comment">## Preliminary to the modules loading</tt> </tt>
<a name="L22"></a><tt class="py-lineno">22</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment">#pr&#233;liminaire avant de commencer &#224; charger des modules</tt> </tt>
<a name="L23"></a><tt class="py-lineno">23</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt id="link-13" class="py-name"><a title="cgibin.admin.mm
cgibin.adminvalid.mm
cgibin.handler.mm
modules.test.mm" class="py-name" href="#" onclick="return doclink('link-13', 'mm', 'link-3');">mm</a></tt><tt class="py-op">.</tt><tt id="link-14" class="py-name" targets="Variable modules.module_manager._ModuleManager.modules_mode=modules.module_manager._ModuleManager-class.html#modules_mode"><a title="modules.module_manager._ModuleManager.modules_mode" class="py-name" href="#" onclick="return doclink('link-14', 'modules_mode', 'link-14');">modules_mode</a></tt> <tt class="py-op">=</tt> <tt class="py-string">"dynamic"</tt> </tt>
<a name="L24"></a><tt class="py-lineno">24</tt>  <tt class="py-line"><tt class="py-keyword">print</tt> <tt id="link-15" class="py-name"><a title="cgibin.admin.mm
cgibin.adminvalid.mm
cgibin.handler.mm
modules.test.mm" class="py-name" href="#" onclick="return doclink('link-15', 'mm', 'link-3');">mm</a></tt><tt class="py-op">.</tt><tt id="link-16" class="py-name"><a title="modules.module_manager._ModuleManager.modules_mode" class="py-name" href="#" onclick="return doclink('link-16', 'modules_mode', 'link-14');">modules_mode</a></tt> </tt>
<a name="L25"></a><tt class="py-lineno">25</tt>  <tt class="py-line"><tt class="py-comment">## Protection: two modes, dynamic and local</tt> </tt>
<a name="L26"></a><tt class="py-lineno">26</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment">#protection : deux modes, dynamic et local</tt> </tt>
<a name="L27"></a><tt class="py-lineno">27</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-keyword">try</tt><tt class="py-op">:</tt> </tt>
<a name="L28"></a><tt class="py-lineno">28</tt>  <tt class="py-line">  <tt id="link-17" class="py-name"><a title="cgibin.admin.mm
cgibin.adminvalid.mm
cgibin.handler.mm
modules.test.mm" class="py-name" href="#" onclick="return doclink('link-17', 'mm', 'link-3');">mm</a></tt><tt class="py-op">.</tt><tt id="link-18" class="py-name"><a title="modules.module_manager._ModuleManager.modules_mode" class="py-name" href="#" onclick="return doclink('link-18', 'modules_mode', 'link-14');">modules_mode</a></tt> <tt class="py-op">=</tt> <tt class="py-string">"3"</tt> </tt>
<a name="L29"></a><tt class="py-lineno">29</tt>  <tt class="py-line"><tt class="py-keyword">except</tt> <tt id="link-19" class="py-name"><a title="modules.module_manager" class="py-name" href="#" onclick="return doclink('link-19', 'module_manager', 'link-1');">module_manager</a></tt><tt class="py-op">.</tt><tt id="link-20" class="py-name" targets="Class modules.module_manager.MMException=modules.module_manager.MMException-class.html"><a title="modules.module_manager.MMException" class="py-name" href="#" onclick="return doclink('link-20', 'MMException', 'link-20');">MMException</a></tt><tt class="py-op">,</tt> <tt class="py-name">e</tt><tt class="py-op">:</tt> </tt>
<a name="L30"></a><tt class="py-lineno">30</tt>  <tt class="py-line">  <tt class="py-keyword">print</tt> <tt class="py-name">e</tt> </tt>
<a name="L31"></a><tt class="py-lineno">31</tt>  <tt class="py-line"><tt class="py-keyword">print</tt> <tt id="link-21" class="py-name"><a title="cgibin.admin.mm
cgibin.adminvalid.mm
cgibin.handler.mm
modules.test.mm" class="py-name" href="#" onclick="return doclink('link-21', 'mm', 'link-3');">mm</a></tt><tt class="py-op">.</tt><tt id="link-22" class="py-name"><a title="modules.module_manager._ModuleManager.modules_mode" class="py-name" href="#" onclick="return doclink('link-22', 'modules_mode', 'link-14');">modules_mode</a></tt> </tt>
<a name="L32"></a><tt class="py-lineno">32</tt>  <tt class="py-line"> </tt>
<a name="L33"></a><tt class="py-lineno">33</tt>  <tt class="py-line"><tt class="py-comment">## It is the way to load "dummy" module described in themodule_dummy.py</tt> </tt>
<a name="L34"></a><tt class="py-lineno">34</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment">#c'est la fa&#231;on de charger le module "dummy" cod&#233; dans themodule_dummy.py</tt> </tt>
<a name="L35"></a><tt class="py-lineno">35</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt id="link-23" class="py-name"><a title="cgibin.admin.mm
cgibin.adminvalid.mm
cgibin.handler.mm
modules.test.mm" class="py-name" href="#" onclick="return doclink('link-23', 'mm', 'link-3');">mm</a></tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt> <tt class="py-op">=</tt> <tt class="py-string">"Dummy"</tt> <tt class="py-comment">##Used as a Python dictionnary</tt> </tt>
<a name="L36"></a><tt class="py-lineno">36</tt>  <tt class="py-line">                <tt class="py-comment">#utilisable comme dictionnaire python</tt> </tt>
<a name="L37"></a><tt class="py-lineno">37</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment">## Module cannot be overwritten</tt> </tt>
<a name="L38"></a><tt class="py-lineno">38</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment">#on ne peut pas &#233;craser de module</tt> </tt>
<a name="L39"></a><tt class="py-lineno">39</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-keyword">try</tt><tt class="py-op">:</tt> </tt>
<a name="L40"></a><tt class="py-lineno">40</tt>  <tt class="py-line">  <tt id="link-24" class="py-name"><a title="cgibin.admin.mm
cgibin.adminvalid.mm
cgibin.handler.mm
modules.test.mm" class="py-name" href="#" onclick="return doclink('link-24', 'mm', 'link-3');">mm</a></tt><tt class="py-op">[</tt><tt class="py-string">'top_left'</tt><tt class="py-op">]</tt> <tt class="py-op">=</tt> <tt class="py-string">"other"</tt> </tt>
<a name="L41"></a><tt class="py-lineno">41</tt>  <tt class="py-line"><tt class="py-keyword">except</tt> <tt id="link-25" class="py-name"><a title="modules.module_manager" class="py-name" href="#" onclick="return doclink('link-25', 'module_manager', 'link-1');">module_manager</a></tt><tt class="py-op">.</tt><tt id="link-26" class="py-name"><a title="modules.module_manager.MMException" class="py-name" href="#" onclick="return doclink('link-26', 'MMException', 'link-20');">MMException</a></tt><tt class="py-op">,</tt> <tt class="py-name">e</tt><tt class="py-op">:</tt> </tt>
<a name="L42"></a><tt class="py-lineno">42</tt>  <tt class="py-line">  <tt class="py-keyword">print</tt> <tt class="py-name">e</tt> </tt>
<a name="L43"></a><tt class="py-lineno">43</tt>  <tt class="py-line"> </tt>
<a name="L44"></a><tt class="py-lineno">44</tt>  <tt class="py-line"><tt class="py-keyword">print</tt> <tt id="link-27" class="py-name"><a title="cgibin.admin.mm
cgibin.adminvalid.mm
cgibin.handler.mm
modules.test.mm" class="py-name" href="#" onclick="return doclink('link-27', 'mm', 'link-3');">mm</a></tt><tt class="py-op">[</tt><tt class="py-string">'top_left'</tt><tt class="py-op">]</tt> <tt class="py-comment">## Prints class instance</tt> </tt>
<a name="L45"></a><tt class="py-lineno">45</tt>  <tt class="py-line">                     <tt class="py-comment">#affiche l'instance de la classe</tt> </tt>
<a name="L46"></a><tt class="py-lineno">46</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-keyword">try</tt><tt class="py-op">:</tt> </tt>
<a name="L47"></a><tt class="py-lineno">47</tt>  <tt class="py-line">  <tt class="py-keyword">print</tt> <tt id="link-28" class="py-name"><a title="cgibin.admin.mm
cgibin.adminvalid.mm
cgibin.handler.mm
modules.test.mm" class="py-name" href="#" onclick="return doclink('link-28', 'mm', 'link-3');">mm</a></tt><tt class="py-op">[</tt><tt class="py-string">'duh'</tt><tt class="py-op">]</tt> <tt class="py-comment">## exception !</tt> </tt>
<a name="L48"></a><tt class="py-lineno">48</tt>  <tt class="py-line"><tt class="py-keyword">except</tt> <tt id="link-29" class="py-name"><a title="modules.module_manager" class="py-name" href="#" onclick="return doclink('link-29', 'module_manager', 'link-1');">module_manager</a></tt><tt class="py-op">.</tt><tt id="link-30" class="py-name"><a title="modules.module_manager.MMException" class="py-name" href="#" onclick="return doclink('link-30', 'MMException', 'link-20');">MMException</a></tt><tt class="py-op">,</tt> <tt class="py-name">e</tt><tt class="py-op">:</tt> </tt>
<a name="L49"></a><tt class="py-lineno">49</tt>  <tt class="py-line">  <tt class="py-keyword">print</tt> <tt class="py-name">e</tt> </tt>
<a name="L50"></a><tt class="py-lineno">50</tt>  <tt class="py-line"> </tt>
<a name="L51"></a><tt class="py-lineno">51</tt>  <tt class="py-line"><tt class="py-comment">##It is also an iterator</tt> </tt>
<a name="L52"></a><tt class="py-lineno">52</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment">#c'est aussi un it&#233;rateur</tt> </tt>
<a name="L53"></a><tt class="py-lineno">53</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-keyword">print</tt> <tt class="py-string">"Iterating over loaded modules"</tt> </tt>
<a name="L54"></a><tt class="py-lineno">54</tt>  <tt class="py-line"><tt class="py-keyword">for</tt> <tt class="py-name">m</tt> <tt class="py-keyword">in</tt> <tt id="link-31" class="py-name"><a title="cgibin.admin.mm
cgibin.adminvalid.mm
cgibin.handler.mm
modules.test.mm" class="py-name" href="#" onclick="return doclink('link-31', 'mm', 'link-3');">mm</a></tt><tt class="py-op">:</tt> </tt>
<a name="L55"></a><tt class="py-lineno">55</tt>  <tt class="py-line">  <tt class="py-keyword">print</tt> <tt class="py-name">m</tt><tt class="py-op">,</tt> <tt id="link-32" class="py-name"><a title="cgibin.admin.mm
cgibin.adminvalid.mm
cgibin.handler.mm
modules.test.mm" class="py-name" href="#" onclick="return doclink('link-32', 'mm', 'link-3');">mm</a></tt><tt class="py-op">[</tt><tt class="py-name">m</tt><tt class="py-op">]</tt> </tt>
<a name="L56"></a><tt class="py-lineno">56</tt>  <tt class="py-line"> </tt>
<a name="L57"></a><tt class="py-lineno">57</tt>  <tt class="py-line"><tt class="py-comment">##Test on module capacities</tt> </tt>
<a name="L58"></a><tt class="py-lineno">58</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment">#test sur les capacit&#233;s du module</tt> </tt>
<a name="L59"></a><tt class="py-lineno">59</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-keyword">print</tt> <tt class="py-name">isinstance</tt><tt class="py-op">(</tt><tt id="link-33" class="py-name"><a title="cgibin.admin.mm
cgibin.adminvalid.mm
cgibin.handler.mm
modules.test.mm" class="py-name" href="#" onclick="return doclink('link-33', 'mm', 'link-3');">mm</a></tt><tt class="py-op">[</tt><tt class="py-string">'top_left'</tt><tt class="py-op">]</tt><tt class="py-op">,</tt><tt id="link-34" class="py-name"><a title="modules.module_interfaces" class="py-name" href="#" onclick="return doclink('link-34', 'module_interfaces', 'link-2');">module_interfaces</a></tt><tt class="py-op">.</tt><tt id="link-35" class="py-name" targets="Class modules.module_interfaces.IModuleContentProvider=modules.module_interfaces.IModuleContentProvider-class.html"><a title="modules.module_interfaces.IModuleContentProvider" class="py-name" href="#" onclick="return doclink('link-35', 'IModuleContentProvider', 'link-35');">IModuleContentProvider</a></tt><tt class="py-op">)</tt> </tt>
<a name="L60"></a><tt class="py-lineno">60</tt>  <tt class="py-line"><tt class="py-keyword">print</tt> <tt class="py-name">isinstance</tt><tt class="py-op">(</tt><tt id="link-36" class="py-name"><a title="cgibin.admin.mm
cgibin.adminvalid.mm
cgibin.handler.mm
modules.test.mm" class="py-name" href="#" onclick="return doclink('link-36', 'mm', 'link-3');">mm</a></tt><tt class="py-op">[</tt><tt class="py-string">'top_left'</tt><tt class="py-op">]</tt><tt class="py-op">,</tt><tt id="link-37" class="py-name"><a title="modules.module_interfaces" class="py-name" href="#" onclick="return doclink('link-37', 'module_interfaces', 'link-2');">module_interfaces</a></tt><tt class="py-op">.</tt><tt id="link-38" class="py-name" targets="Class modules.module_interfaces.IModuleAdminPage=modules.module_interfaces.IModuleAdminPage-class.html"><a title="modules.module_interfaces.IModuleAdminPage" class="py-name" href="#" onclick="return doclink('link-38', 'IModuleAdminPage', 'link-38');">IModuleAdminPage</a></tt><tt class="py-op">)</tt> </tt>
<a name="L61"></a><tt class="py-lineno">61</tt>  <tt class="py-line"> </tt>
<a name="L62"></a><tt class="py-lineno">62</tt>  <tt class="py-line"><tt class="py-comment">###### Testing module Publi ######</tt> </tt>
<a name="L63"></a><tt class="py-lineno">63</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment">#### On teste le module Publi ####</tt> </tt>
<a name="L64"></a><tt class="py-lineno">64</tt>  <tt class="py-line"><tt class="py-comment"></tt> </tt>
<a name="L65"></a><tt class="py-lineno">65</tt>  <tt class="py-line"><tt id="link-39" class="py-name"><a title="cgibin.admin.mm
cgibin.adminvalid.mm
cgibin.handler.mm
modules.test.mm" class="py-name" href="#" onclick="return doclink('link-39', 'mm', 'link-3');">mm</a></tt><tt class="py-op">[</tt><tt class="py-string">'hey_dude'</tt><tt class="py-op">]</tt> <tt class="py-op">=</tt> <tt class="py-string">"Publi"</tt>  </tt>
<a name="L66"></a><tt class="py-lineno">66</tt>  <tt class="py-line"><tt class="py-comment">## A few tests</tt> </tt>
<a name="L67"></a><tt class="py-lineno">67</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># on fait quelques tests....</tt> </tt>
<a name="L68"></a><tt class="py-lineno">68</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-keyword">print</tt> <tt id="link-40" class="py-name"><a title="cgibin.admin.mm
cgibin.adminvalid.mm
cgibin.handler.mm
modules.test.mm" class="py-name" href="#" onclick="return doclink('link-40', 'mm', 'link-3');">mm</a></tt><tt class="py-op">[</tt><tt class="py-string">'hey_dude'</tt><tt class="py-op">]</tt><tt class="py-op">.</tt><tt class="py-name">module_info</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L69"></a><tt class="py-lineno">69</tt>  <tt class="py-line"> </tt>
<a name="L70"></a><tt class="py-lineno">70</tt>  <tt class="py-line"><tt class="py-comment">## One need the proper PYTHONPATH</tt> </tt>
<a name="L71"></a><tt class="py-lineno">71</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># Il faut avoir le bon PYTHONPATH </tt> </tt>
<a name="L72"></a><tt class="py-lineno">72</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># import db_manager</tt> </tt>
<a name="L73"></a><tt class="py-lineno">73</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># from conf import conf, conf_private</tt> </tt>
<a name="L74"></a><tt class="py-lineno">74</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># from conf import confstatic</tt> </tt>
<a name="L75"></a><tt class="py-lineno">75</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># db = db_manager.DBManager(conf.server_db)</tt> </tt>
<a name="L76"></a><tt class="py-lineno">76</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># mm['hey_dude'].setup_db(db)</tt> </tt>
<a name="L77"></a><tt class="py-lineno">77</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># mm['hey_dude'].parse_doc(' # @article{ACP1987,\n #  author    = {Stefan Arnborg and Derek G. Corneil and Andrzej Proskurowski},\n #  title     = {Complexity of Finding Embeddings in a $k$-Tree},\n #  journal   = JADM,\n\</tt> </tt>
<a name="L78"></a><tt class="py-lineno">78</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment">#  pages     = {277-284},\n # year      = 1987,\n #  volume    = 8,\n #  number    = 2,\n #  note      = {\url{http://dx.doi.org/10.1137/0608024}},\n #  comment   = {alt url \url{http://link.aip.org/link/?SML/8/277/1}}\n #}\n #')</tt> </tt>
<a name="L79"></a><tt class="py-lineno">79</tt>  <tt class="py-line"><tt class="py-comment"></tt> </tt><script type="text/javascript">
<!--
expandto(location.href);
// -->
</script>
</pre>
<br />
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Project homepage -->
      <th class="navbar" align="right" width="100%">
        <table border="0" cellpadding="0" cellspacing="0">
          <tr><th class="navbar" align="center"
            ><a class="navbar" target="_top" href="http://graal.ens-lyon.fr/comfort/">CoMFoRT</a></th>
          </tr></table></th>
  </tr>
</table>
<table border="0" cellpadding="0" cellspacing="0" width="100%%">
  <tr>
    <td align="left" class="footer">
    Generated by Epydoc 3.0.1 on Sun May 25 15:42:54 2008
    </td>
    <td align="right" class="footer">
      <a target="mainFrame" href="http://epydoc.sourceforge.net"
        >http://epydoc.sourceforge.net</a>
    </td>
  </tr>
</table>

<script type="text/javascript">
  <!--
  // Private objects are initially displayed (because if
  // javascript is turned off then we want them to be
  // visible); but by default, we want to hide them.  So hide
  // them unless we have a cookie that says to show them.
  checkCookie();
  // -->
</script>
</body>
</html>
