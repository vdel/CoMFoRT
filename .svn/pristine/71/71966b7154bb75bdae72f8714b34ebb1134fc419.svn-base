<?xml version="1.0" encoding="ascii"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
          "DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>db.parser_minidom</title>
  <link rel="stylesheet" href="epydoc.css" type="text/css" />
  <script type="text/javascript" src="epydoc.js"></script>
</head>

<body bgcolor="white" text="black" link="blue" vlink="#204080"
      alink="#204080">
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Project homepage -->
      <th class="navbar" align="right" width="100%">
        <table border="0" cellpadding="0" cellspacing="0">
          <tr><th class="navbar" align="center"
            ><a class="navbar" target="_top" href="http://graal.ens-lyon.fr/comfort/">CoMFoRT</a></th>
          </tr></table></th>
  </tr>
</table>
<table width="100%" cellpadding="0" cellspacing="0">
  <tr valign="top">
    <td width="100%">
      <span class="breadcrumbs">
        <a href="db-module.html">Package&nbsp;db</a> ::
        Module&nbsp;parser_minidom
      </span>
    </td>
    <td>
      <table cellpadding="0" cellspacing="0">
        <!-- hide/show private -->
        <tr><td align="right"><span class="options">[<a href="javascript:void(0);" class="privatelink"
    onclick="toggle_private();">hide&nbsp;private</a>]</span></td></tr>
        <tr><td align="right"><span class="options"
            >[<a href="frames.html" target="_top">frames</a
            >]&nbsp;|&nbsp;<a href="db.parser_minidom-pysrc.html"
            target="_top">no&nbsp;frames</a>]</span></td></tr>
      </table>
    </td>
  </tr>
</table>
<h1 class="epydoc">Source Code for <a href="db.parser_minidom-module.html">Module db.parser_minidom</a></h1>
<pre class="py-src">
<a name="L1"></a><tt class="py-lineno">  1</tt>  <tt class="py-line"><tt class="py-comment"># -*- encoding: utf-8 -*-</tt> </tt>
<a name="L2"></a><tt class="py-lineno">  2</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-keyword">from</tt> <tt class="py-name">xml</tt><tt class="py-op">.</tt><tt class="py-name">dom</tt> <tt class="py-keyword">import</tt> <tt class="py-name">minidom</tt> </tt>
<a name="L3"></a><tt class="py-lineno">  3</tt>  <tt class="py-line"><tt class="py-keyword">from</tt> <tt class="py-name">os</tt> <tt class="py-keyword">import</tt> <tt class="py-name">rename</tt> </tt>
<a name="L4"></a><tt class="py-lineno">  4</tt>  <tt class="py-line"><tt class="py-keyword">from</tt> <tt id="link-0" class="py-name" targets="Module db.encode=db.encode-module.html"><a title="db.encode" class="py-name" href="#" onclick="return doclink('link-0', 'encode', 'link-0');">encode</a></tt> <tt class="py-keyword">import</tt> <tt id="link-1" class="py-name" targets="Function db.encode.EncodeToWrite()=db.encode-module.html#EncodeToWrite"><a title="db.encode.EncodeToWrite" class="py-name" href="#" onclick="return doclink('link-1', 'EncodeToWrite', 'link-1');">EncodeToWrite</a></tt><tt class="py-op">,</tt> <tt id="link-2" class="py-name" targets="Function db.encode.DecodeReading()=db.encode-module.html#DecodeReading"><a title="db.encode.DecodeReading" class="py-name" href="#" onclick="return doclink('link-2', 'DecodeReading', 'link-2');">DecodeReading</a></tt> </tt>
<a name="L5"></a><tt class="py-lineno">  5</tt>  <tt class="py-line"> </tt>
<a name="L6"></a><tt class="py-lineno">  6</tt>  <tt class="py-line"><tt class="py-comment">## General scheme of a table</tt> </tt>
<a name="L7"></a><tt class="py-lineno">  7</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment">## List of dictionnaries</tt> </tt>
<a name="L8"></a><tt class="py-lineno">  8</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment">## The first is the field descriptor</tt> </tt>
<a name="L9"></a><tt class="py-lineno">  9</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment">## Others are records</tt> </tt>
<a name="L10"></a><tt class="py-lineno"> 10</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># sch&#233;ma g&#233;n&#233;ral d'une table</tt> </tt>
<a name="L11"></a><tt class="py-lineno"> 11</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># liste de dictionnaire</tt> </tt>
<a name="L12"></a><tt class="py-lineno"> 12</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># le premier est le descripteur des champs, les</tt> </tt>
<a name="L13"></a><tt class="py-lineno"> 13</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># autres sont les enregistrements.</tt> </tt>
<a name="L14"></a><tt class="py-lineno"> 14</tt>  <tt class="py-line"><tt class="py-comment"></tt> </tt>
<a name="L15"></a><tt class="py-lineno"> 15</tt>  <tt class="py-line"><tt class="py-comment">## There will be a configuration file</tt> </tt>
<a name="L16"></a><tt class="py-lineno"> 16</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># on aura un fichier de configuration</tt> </tt>
<a name="L17"></a><tt class="py-lineno"> 17</tt>  <tt class="py-line"><tt class="py-comment"></tt> </tt>
<a name="L18"></a><tt class="py-lineno"> 18</tt>  <tt class="py-line"> </tt>
<a name="L19"></a><tt class="py-lineno"> 19</tt>  <tt class="py-line"><tt class="py-comment">## Changes  "t1,t2,t3" into ["t1","t2","t3"]</tt> </tt>
<a name="L20"></a><tt class="py-lineno"> 20</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># transforme "t1,t2,t3" en ["t1","t2","t3"]</tt> </tt>
<a name="analyse"></a><div id="analyse-def"><a name="L21"></a><tt class="py-lineno"> 21</tt> <a class="py-toggle" href="#" id="analyse-toggle" onclick="return toggle('analyse');">-</a><tt class="py-line"><tt class="py-comment"></tt><tt class="py-keyword">def</tt> <a class="py-def-name" href="db.parser_minidom-module.html#analyse">analyse</a><tt class="py-op">(</tt><tt class="py-param">s</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="analyse-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="analyse-expanded"><a name="L22"></a><tt class="py-lineno"> 22</tt>  <tt class="py-line">  <tt class="py-name">tmp</tt> <tt class="py-op">=</tt> <tt class="py-string">""</tt> </tt>
<a name="L23"></a><tt class="py-lineno"> 23</tt>  <tt class="py-line">  <tt id="link-3" class="py-name" targets="Variable db.encode.a=db.encode-module.html#a,Variable db.test.a=db.test-module.html#a,Variable db.test_xml.a=db.test_xml-module.html#a,Variable db.testdbm.a=db.testdbm-module.html#a"><a title="db.encode.a
db.test.a
db.test_xml.a
db.testdbm.a" class="py-name" href="#" onclick="return doclink('link-3', 'a', 'link-3');">a</a></tt> <tt class="py-op">=</tt> <tt class="py-op">[</tt><tt class="py-op">]</tt> </tt>
<a name="L24"></a><tt class="py-lineno"> 24</tt>  <tt class="py-line">  <tt class="py-keyword">for</tt> <tt class="py-name">c</tt> <tt class="py-keyword">in</tt> <tt class="py-name">s</tt><tt class="py-op">:</tt> </tt>
<a name="L25"></a><tt class="py-lineno"> 25</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt class="py-name">c</tt> <tt class="py-op">==</tt> <tt class="py-string">','</tt><tt class="py-op">:</tt> </tt>
<a name="L26"></a><tt class="py-lineno"> 26</tt>  <tt class="py-line">      <tt id="link-4" class="py-name"><a title="db.encode.a
db.test.a
db.test_xml.a
db.testdbm.a" class="py-name" href="#" onclick="return doclink('link-4', 'a', 'link-3');">a</a></tt><tt class="py-op">.</tt><tt class="py-name">append</tt><tt class="py-op">(</tt><tt class="py-name">tmp</tt><tt class="py-op">)</tt> </tt>
<a name="L27"></a><tt class="py-lineno"> 27</tt>  <tt class="py-line">      <tt class="py-name">tmp</tt> <tt class="py-op">=</tt> <tt class="py-string">""</tt> </tt>
<a name="L28"></a><tt class="py-lineno"> 28</tt>  <tt class="py-line">    <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L29"></a><tt class="py-lineno"> 29</tt>  <tt class="py-line">      <tt class="py-name">tmp</tt> <tt class="py-op">=</tt> <tt class="py-name">tmp</tt> <tt class="py-op">+</tt> <tt class="py-name">c</tt> </tt>
<a name="L30"></a><tt class="py-lineno"> 30</tt>  <tt class="py-line">  <tt id="link-5" class="py-name"><a title="db.encode.a
db.test.a
db.test_xml.a
db.testdbm.a" class="py-name" href="#" onclick="return doclink('link-5', 'a', 'link-3');">a</a></tt><tt class="py-op">.</tt><tt class="py-name">append</tt><tt class="py-op">(</tt><tt class="py-name">tmp</tt><tt class="py-op">)</tt> </tt>
<a name="L31"></a><tt class="py-lineno"> 31</tt>  <tt class="py-line">  <tt class="py-keyword">return</tt> <tt id="link-6" class="py-name"><a title="db.encode.a
db.test.a
db.test_xml.a
db.testdbm.a" class="py-name" href="#" onclick="return doclink('link-6', 'a', 'link-3');">a</a></tt> </tt>
</div><a name="L32"></a><tt class="py-lineno"> 32</tt>  <tt class="py-line"> </tt>
<a name="L33"></a><tt class="py-lineno"> 33</tt>  <tt class="py-line"><tt class="py-comment">## tabs and line jumps before and after the string are removed  </tt> </tt>
<a name="L34"></a><tt class="py-lineno"> 34</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># on enl&#232;ve les tab et saut de ligne avant et apr&#232;s une chaine de caract&#232;re</tt> </tt>
<a name="clean_string"></a><div id="clean_string-def"><a name="L35"></a><tt class="py-lineno"> 35</tt> <a class="py-toggle" href="#" id="clean_string-toggle" onclick="return toggle('clean_string');">-</a><tt class="py-line"><tt class="py-comment"></tt><tt class="py-keyword">def</tt> <a class="py-def-name" href="db.parser_minidom-module.html#clean_string">clean_string</a><tt class="py-op">(</tt><tt class="py-param">s</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="clean_string-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="clean_string-expanded"><a name="L36"></a><tt class="py-lineno"> 36</tt>  <tt class="py-line">  <tt class="py-name">begin</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L37"></a><tt class="py-lineno"> 37</tt>  <tt class="py-line">  <tt id="link-7" class="py-name" targets="Variable db.testOrder.l=db.testOrder-module.html#l"><a title="db.testOrder.l" class="py-name" href="#" onclick="return doclink('link-7', 'l', 'link-7');">l</a></tt> <tt class="py-op">=</tt> <tt class="py-name">len</tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">)</tt> </tt>
<a name="L38"></a><tt class="py-lineno"> 38</tt>  <tt class="py-line">  <tt class="py-keyword">for</tt> <tt class="py-name">i</tt> <tt class="py-keyword">in</tt> <tt class="py-name">range</tt><tt class="py-op">(</tt><tt id="link-8" class="py-name"><a title="db.testOrder.l" class="py-name" href="#" onclick="return doclink('link-8', 'l', 'link-7');">l</a></tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L39"></a><tt class="py-lineno"> 39</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-name">i</tt><tt class="py-op">]</tt> <tt class="py-op">!=</tt> <tt class="py-string">"\t"</tt> <tt class="py-keyword">and</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-name">i</tt><tt class="py-op">]</tt> <tt class="py-op">!=</tt> <tt class="py-string">"\n"</tt> <tt class="py-keyword">and</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-name">i</tt><tt class="py-op">]</tt> <tt class="py-op">!=</tt> <tt class="py-string">" "</tt><tt class="py-op">:</tt> </tt>
<a name="L40"></a><tt class="py-lineno"> 40</tt>  <tt class="py-line">      <tt class="py-name">begin</tt> <tt class="py-op">=</tt> <tt class="py-name">i</tt> </tt>
<a name="L41"></a><tt class="py-lineno"> 41</tt>  <tt class="py-line">      <tt class="py-keyword">break</tt> </tt>
<a name="L42"></a><tt class="py-lineno"> 42</tt>  <tt class="py-line">  <tt class="py-keyword">for</tt> <tt class="py-name">j</tt> <tt class="py-keyword">in</tt> <tt class="py-name">range</tt><tt class="py-op">(</tt><tt id="link-9" class="py-name"><a title="db.testOrder.l" class="py-name" href="#" onclick="return doclink('link-9', 'l', 'link-7');">l</a></tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L43"></a><tt class="py-lineno"> 43</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt id="link-10" class="py-name"><a title="db.testOrder.l" class="py-name" href="#" onclick="return doclink('link-10', 'l', 'link-7');">l</a></tt><tt class="py-op">-</tt><tt class="py-name">j</tt><tt class="py-op">-</tt><tt class="py-number">1</tt><tt class="py-op">]</tt> <tt class="py-op">!=</tt> <tt class="py-string">"\t"</tt> <tt class="py-keyword">and</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt id="link-11" class="py-name"><a title="db.testOrder.l" class="py-name" href="#" onclick="return doclink('link-11', 'l', 'link-7');">l</a></tt><tt class="py-op">-</tt><tt class="py-name">j</tt><tt class="py-op">-</tt><tt class="py-number">1</tt><tt class="py-op">]</tt> <tt class="py-op">!=</tt> <tt class="py-string">"\n"</tt> <tt class="py-keyword">and</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt id="link-12" class="py-name"><a title="db.testOrder.l" class="py-name" href="#" onclick="return doclink('link-12', 'l', 'link-7');">l</a></tt><tt class="py-op">-</tt><tt class="py-name">j</tt><tt class="py-op">-</tt><tt class="py-number">1</tt><tt class="py-op">]</tt> <tt class="py-op">!=</tt> <tt class="py-string">" "</tt><tt class="py-op">:</tt> </tt>
<a name="L44"></a><tt class="py-lineno"> 44</tt>  <tt class="py-line">      <tt class="py-name">end</tt> <tt class="py-op">=</tt> <tt id="link-13" class="py-name"><a title="db.testOrder.l" class="py-name" href="#" onclick="return doclink('link-13', 'l', 'link-7');">l</a></tt><tt class="py-op">-</tt><tt class="py-name">j</tt> </tt>
<a name="L45"></a><tt class="py-lineno"> 45</tt>  <tt class="py-line">      <tt class="py-keyword">break</tt> </tt>
<a name="L46"></a><tt class="py-lineno"> 46</tt>  <tt class="py-line">  <tt class="py-keyword">return</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-name">begin</tt><tt class="py-op">:</tt><tt class="py-name">end</tt><tt class="py-op">]</tt> </tt>
</div><a name="L47"></a><tt class="py-lineno"> 47</tt>  <tt class="py-line"> </tt>
<a name="date"></a><div id="date-def"><a name="L48"></a><tt class="py-lineno"> 48</tt> <a class="py-toggle" href="#" id="date-toggle" onclick="return toggle('date');">-</a><tt class="py-line"><tt class="py-keyword">def</tt> <a class="py-def-name" href="db.parser_minidom-module.html#date">date</a><tt class="py-op">(</tt><tt class="py-param">s</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="date-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="date-expanded"><a name="L49"></a><tt class="py-lineno"> 49</tt>  <tt class="py-line">  <tt class="py-keyword">return</tt> <tt class="py-name">s</tt> </tt>
</div><a name="L50"></a><tt class="py-lineno"> 50</tt>  <tt class="py-line"> </tt>
<a name="L51"></a><tt class="py-lineno"> 51</tt>  <tt class="py-line"><tt class="py-comment">## value is to be return in the pattern type ["field"]</tt> </tt>
<a name="L52"></a><tt class="py-lineno"> 52</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># on doit retourner value dans le type de schema["field"]</tt> </tt>
<a name="typage"></a><div id="typage-def"><a name="L53"></a><tt class="py-lineno"> 53</tt> <a class="py-toggle" href="#" id="typage-toggle" onclick="return toggle('typage');">-</a><tt class="py-line"><tt class="py-comment"></tt><tt class="py-keyword">def</tt> <a class="py-def-name" href="db.parser_minidom-module.html#typage">typage</a><tt class="py-op">(</tt><tt class="py-param">schema</tt><tt class="py-op">,</tt><tt class="py-param">field</tt><tt class="py-op">,</tt><tt class="py-param">chaine_value</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="typage-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="typage-expanded"><a name="L54"></a><tt class="py-lineno"> 54</tt>  <tt class="py-line">  <tt class="py-comment">## Definition of an (action &lt;=&gt; C switch case) dictionnary</tt> </tt>
<a name="L55"></a><tt class="py-lineno"> 55</tt>  <tt class="py-line"><tt class="py-comment"></tt>  <tt class="py-comment"># on d&#233;finit un dico d'action &lt;=&gt; switch case en C</tt> </tt>
<a name="L56"></a><tt class="py-lineno"> 56</tt>  <tt class="py-line"><tt class="py-comment"></tt>  <tt class="py-name">actions</tt> <tt class="py-op">=</tt> <tt class="py-op">{</tt><tt class="py-op">}</tt> </tt>
<a name="L57"></a><tt class="py-lineno"> 57</tt>  <tt class="py-line">  <tt class="py-name">actions</tt><tt class="py-op">[</tt><tt class="py-string">"text"</tt><tt class="py-op">]</tt> <tt class="py-op">=</tt> <tt class="py-name">str</tt> </tt>
<a name="L58"></a><tt class="py-lineno"> 58</tt>  <tt class="py-line">  <tt class="py-name">actions</tt><tt class="py-op">[</tt><tt class="py-string">"int"</tt><tt class="py-op">]</tt> <tt class="py-op">=</tt> <tt class="py-name">int</tt> </tt>
<a name="L59"></a><tt class="py-lineno"> 59</tt>  <tt class="py-line">  <tt class="py-name">actions</tt><tt class="py-op">[</tt><tt class="py-string">"date"</tt><tt class="py-op">]</tt> <tt class="py-op">=</tt> <tt id="link-14" class="py-name" targets="Function db.parser_minidom.date()=db.parser_minidom-module.html#date"><a title="db.parser_minidom.date" class="py-name" href="#" onclick="return doclink('link-14', 'date', 'link-14');">date</a></tt> </tt>
<a name="L60"></a><tt class="py-lineno"> 60</tt>  <tt class="py-line">  <tt class="py-name">actions</tt><tt class="py-op">[</tt><tt class="py-string">"id"</tt><tt class="py-op">]</tt> <tt class="py-op">=</tt> <tt class="py-name">int</tt> </tt>
<a name="L61"></a><tt class="py-lineno"> 61</tt>  <tt class="py-line">  <tt class="py-keyword">return</tt> <tt class="py-name">actions</tt><tt class="py-op">[</tt><tt id="link-15" class="py-name" targets="Method db.db_interface.IDBTable.schema()=db.db_interface.IDBTable-class.html#schema"><a title="db.db_interface.IDBTable.schema" class="py-name" href="#" onclick="return doclink('link-15', 'schema', 'link-15');">schema</a></tt><tt class="py-op">[</tt><tt class="py-name">field</tt><tt class="py-op">]</tt><tt class="py-op">]</tt><tt class="py-op">(</tt><tt class="py-name">chaine_value</tt><tt class="py-op">)</tt> </tt>
</div><a name="L62"></a><tt class="py-lineno"> 62</tt>  <tt class="py-line"> </tt>
<a name="L63"></a><tt class="py-lineno"> 63</tt>  <tt class="py-line"><tt class="py-comment">## Takes a chilNodes child list and flatten its content in order</tt> </tt>
<a name="L64"></a><tt class="py-lineno"> 64</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment">## to get everything that lies between two xml markers</tt> </tt>
<a name="L65"></a><tt class="py-lineno"> 65</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># on prend une liste childNodes child et on concat&#232;ne son contenu</tt> </tt>
<a name="L66"></a><tt class="py-lineno"> 66</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># dans le but d'obtenir tout ce qui se trouve entre deux balises xml</tt> </tt>
<a name="getAllChildrenContent"></a><div id="getAllChildrenContent-def"><a name="L67"></a><tt class="py-lineno"> 67</tt> <a class="py-toggle" href="#" id="getAllChildrenContent-toggle" onclick="return toggle('getAllChildrenContent');">-</a><tt class="py-line"><tt class="py-comment"></tt><tt class="py-keyword">def</tt> <a class="py-def-name" href="db.parser_minidom-module.html#getAllChildrenContent">getAllChildrenContent</a><tt class="py-op">(</tt><tt class="py-param">child</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="getAllChildrenContent-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="getAllChildrenContent-expanded"><a name="L68"></a><tt class="py-lineno"> 68</tt>  <tt class="py-line">  <tt class="py-name">s</tt> <tt class="py-op">=</tt> <tt class="py-string">""</tt> </tt>
<a name="L69"></a><tt class="py-lineno"> 69</tt>  <tt class="py-line">  <tt class="py-keyword">for</tt> <tt class="py-name">i</tt> <tt class="py-keyword">in</tt> <tt class="py-name">child</tt><tt class="py-op">:</tt> </tt>
<a name="L70"></a><tt class="py-lineno"> 70</tt>  <tt class="py-line">    <tt class="py-name">s</tt> <tt class="py-op">+=</tt> <tt class="py-name">i</tt><tt class="py-op">.</tt><tt class="py-name">toxml</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L71"></a><tt class="py-lineno"> 71</tt>  <tt class="py-line">  <tt class="py-keyword">return</tt> <tt class="py-name">s</tt> </tt>
</div><a name="L72"></a><tt class="py-lineno"> 72</tt>  <tt class="py-line"> </tt>
<a name="L73"></a><tt class="py-lineno"> 73</tt>  <tt class="py-line"> </tt>
<a name="L74"></a><tt class="py-lineno"> 74</tt>  <tt class="py-line"> </tt>
<a name="xmlReader"></a><div id="xmlReader-def"><a name="L75"></a><tt class="py-lineno"> 75</tt> <a class="py-toggle" href="#" id="xmlReader-toggle" onclick="return toggle('xmlReader');">-</a><tt class="py-line"><tt class="py-keyword">class</tt> <a class="py-def-name" href="db.parser_minidom.xmlReader-class.html">xmlReader</a><tt class="py-op">:</tt> </tt>
</div><div id="xmlReader-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="xmlReader-expanded"><a name="L76"></a><tt class="py-lineno"> 76</tt>  <tt class="py-line">  <tt class="py-docstring">""" fonction de parsage du fichier xml"""</tt> </tt>
<a name="xmlReader.__init__"></a><div id="xmlReader.__init__-def"><a name="L77"></a><tt class="py-lineno"> 77</tt> <a class="py-toggle" href="#" id="xmlReader.__init__-toggle" onclick="return toggle('xmlReader.__init__');">-</a><tt class="py-line">  <tt class="py-keyword">def</tt> <a class="py-def-name" href="db.parser_minidom.xmlReader-class.html#__init__">__init__</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt><tt class="py-param">name</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="xmlReader.__init__-collapsed" style="display:none;" pad="+++" indent="++++++"></div><div id="xmlReader.__init__-expanded"><a name="L78"></a><tt class="py-lineno"> 78</tt>  <tt class="py-line">    <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">xmldoc</tt> <tt class="py-op">=</tt> <tt class="py-name">minidom</tt><tt class="py-op">.</tt><tt id="link-16" class="py-name" targets="Method modules.themodule_Publi.Bibtex_entry.parse()=modules.themodule_Publi.Bibtex_entry-class.html#parse"><a title="modules.themodule_Publi.Bibtex_entry.parse" class="py-name" href="#" onclick="return doclink('link-16', 'parse', 'link-16');">parse</a></tt><tt class="py-op">(</tt><tt class="py-name">name</tt><tt class="py-op">)</tt> </tt>
<a name="L79"></a><tt class="py-lineno"> 79</tt>  <tt class="py-line">    <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-17" class="py-name" targets="Method db.db_interface.IDB.table()=db.db_interface.IDB-class.html#table,Method db.db_sql.SQL_DB.table()=db.db_sql.SQL_DB-class.html#table,Method db.db_xml.DBXML.table()=db.db_xml.DBXML-class.html#table,Variable db.test.table=db.test-module.html#table,Variable db.test_xml.table=db.test_xml-module.html#table"><a title="db.db_interface.IDB.table
db.db_sql.SQL_DB.table
db.db_xml.DBXML.table
db.test.table
db.test_xml.table" class="py-name" href="#" onclick="return doclink('link-17', 'table', 'link-17');">table</a></tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">xmldoc</tt><tt class="py-op">.</tt><tt class="py-name">childNodes</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt> </tt>
<a name="L80"></a><tt class="py-lineno"> 80</tt>  <tt class="py-line">    <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">fieldsList</tt> <tt class="py-op">=</tt> <tt id="link-18" class="py-name" targets="Function db.parser_minidom.analyse()=db.parser_minidom-module.html#analyse"><a title="db.parser_minidom.analyse" class="py-name" href="#" onclick="return doclink('link-18', 'analyse', 'link-18');">analyse</a></tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-19" class="py-name"><a title="db.db_interface.IDB.table
db.db_sql.SQL_DB.table
db.db_xml.DBXML.table
db.test.table
db.test_xml.table" class="py-name" href="#" onclick="return doclink('link-19', 'table', 'link-17');">table</a></tt><tt class="py-op">.</tt><tt class="py-name">attributes</tt><tt class="py-op">[</tt><tt class="py-string">"fields"</tt><tt class="py-op">]</tt><tt class="py-op">.</tt><tt class="py-name">value</tt><tt class="py-op">)</tt> </tt>
<a name="L81"></a><tt class="py-lineno"> 81</tt>  <tt class="py-line">    <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">fieldsTypeList</tt> <tt class="py-op">=</tt> <tt id="link-20" class="py-name"><a title="db.parser_minidom.analyse" class="py-name" href="#" onclick="return doclink('link-20', 'analyse', 'link-18');">analyse</a></tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-21" class="py-name"><a title="db.db_interface.IDB.table
db.db_sql.SQL_DB.table
db.db_xml.DBXML.table
db.test.table
db.test_xml.table" class="py-name" href="#" onclick="return doclink('link-21', 'table', 'link-17');">table</a></tt><tt class="py-op">.</tt><tt class="py-name">attributes</tt><tt class="py-op">[</tt><tt class="py-string">"types"</tt><tt class="py-op">]</tt><tt class="py-op">.</tt><tt class="py-name">value</tt><tt class="py-op">)</tt> </tt>
<a name="L82"></a><tt class="py-lineno"> 82</tt>  <tt class="py-line">    <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">id</tt> <tt class="py-op">=</tt> <tt class="py-name">int</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-22" class="py-name"><a title="db.db_interface.IDB.table
db.db_sql.SQL_DB.table
db.db_xml.DBXML.table
db.test.table
db.test_xml.table" class="py-name" href="#" onclick="return doclink('link-22', 'table', 'link-17');">table</a></tt><tt class="py-op">.</tt><tt class="py-name">attributes</tt><tt class="py-op">[</tt><tt class="py-string">"id"</tt><tt class="py-op">]</tt><tt class="py-op">.</tt><tt class="py-name">value</tt><tt class="py-op">)</tt> </tt>
</div><a name="L83"></a><tt class="py-lineno"> 83</tt>  <tt class="py-line"> </tt>
<a name="L84"></a><tt class="py-lineno"> 84</tt>  <tt class="py-line">  <tt class="py-comment">## Returns a field list</tt> </tt>
<a name="L85"></a><tt class="py-lineno"> 85</tt>  <tt class="py-line"><tt class="py-comment"></tt>  <tt class="py-comment"># on renvoie une liste des champs</tt> </tt>
<a name="xmlReader.fields"></a><div id="xmlReader.fields-def"><a name="L86"></a><tt class="py-lineno"> 86</tt> <a class="py-toggle" href="#" id="xmlReader.fields-toggle" onclick="return toggle('xmlReader.fields');">-</a><tt class="py-line"><tt class="py-comment"></tt>  <tt class="py-keyword">def</tt> <a class="py-def-name" href="db.parser_minidom.xmlReader-class.html#fields">fields</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt><tt class="py-param">name</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="xmlReader.fields-collapsed" style="display:none;" pad="+++" indent="++++++"></div><div id="xmlReader.fields-expanded"><a name="L87"></a><tt class="py-lineno"> 87</tt>  <tt class="py-line">    <tt class="py-name">result</tt> <tt class="py-op">=</tt> <tt class="py-op">[</tt><tt class="py-op">]</tt> </tt>
<a name="L88"></a><tt class="py-lineno"> 88</tt>  <tt class="py-line">    <tt id="link-23" class="py-name"><a title="db.testOrder.l" class="py-name" href="#" onclick="return doclink('link-23', 'l', 'link-7');">l</a></tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-24" class="py-name"><a title="db.db_interface.IDB.table
db.db_sql.SQL_DB.table
db.db_xml.DBXML.table
db.test.table
db.test_xml.table" class="py-name" href="#" onclick="return doclink('link-24', 'table', 'link-17');">table</a></tt><tt class="py-op">.</tt><tt class="py-name">getElementsByTagName</tt><tt class="py-op">(</tt><tt class="py-name">name</tt><tt class="py-op">)</tt> </tt>
<a name="L89"></a><tt class="py-lineno"> 89</tt>  <tt class="py-line">    <tt class="py-keyword">for</tt> <tt class="py-name">c</tt> <tt class="py-keyword">in</tt> <tt id="link-25" class="py-name"><a title="db.testOrder.l" class="py-name" href="#" onclick="return doclink('link-25', 'l', 'link-7');">l</a></tt><tt class="py-op">:</tt> </tt>
<a name="L90"></a><tt class="py-lineno"> 90</tt>  <tt class="py-line">      <tt id="link-26" class="py-name"><a title="db.encode.a
db.test.a
db.test_xml.a
db.testdbm.a" class="py-name" href="#" onclick="return doclink('link-26', 'a', 'link-3');">a</a></tt> <tt class="py-op">=</tt> <tt class="py-name">c</tt><tt class="py-op">.</tt><tt class="py-name">firstChild</tt><tt class="py-op">.</tt><tt class="py-name">data</tt> </tt>
<a name="L91"></a><tt class="py-lineno"> 91</tt>  <tt class="py-line">      <tt class="py-name">result</tt><tt class="py-op">.</tt><tt class="py-name">append</tt><tt class="py-op">(</tt><tt id="link-27" class="py-name"><a title="db.encode.a
db.test.a
db.test_xml.a
db.testdbm.a" class="py-name" href="#" onclick="return doclink('link-27', 'a', 'link-3');">a</a></tt><tt class="py-op">)</tt> </tt>
<a name="L92"></a><tt class="py-lineno"> 92</tt>  <tt class="py-line">    <tt class="py-keyword">return</tt> <tt class="py-name">result</tt> </tt>
</div><a name="L93"></a><tt class="py-lineno"> 93</tt>  <tt class="py-line"> </tt>
<a name="L94"></a><tt class="py-lineno"> 94</tt>  <tt class="py-line">  <tt class="py-comment">## Returns result n&#176; number </tt> </tt>
<a name="L95"></a><tt class="py-lineno"> 95</tt>  <tt class="py-line"><tt class="py-comment"></tt>  <tt class="py-comment"># on renvoie le resultat n&#176; number </tt> </tt>
<a name="xmlReader.record"></a><div id="xmlReader.record-def"><a name="L96"></a><tt class="py-lineno"> 96</tt> <a class="py-toggle" href="#" id="xmlReader.record-toggle" onclick="return toggle('xmlReader.record');">-</a><tt class="py-line"><tt class="py-comment"></tt>  <tt class="py-keyword">def</tt> <a class="py-def-name" href="db.parser_minidom.xmlReader-class.html#record">record</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt><tt class="py-param">number</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="xmlReader.record-collapsed" style="display:none;" pad="+++" indent="++++++"></div><div id="xmlReader.record-expanded"><a name="L97"></a><tt class="py-lineno"> 97</tt>  <tt class="py-line">    <tt class="py-name">rs</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-28" class="py-name"><a title="db.db_interface.IDB.table
db.db_sql.SQL_DB.table
db.db_xml.DBXML.table
db.test.table
db.test_xml.table" class="py-name" href="#" onclick="return doclink('link-28', 'table', 'link-17');">table</a></tt><tt class="py-op">.</tt><tt class="py-name">getElementsByTagName</tt><tt class="py-op">(</tt><tt class="py-string">"record"</tt><tt class="py-op">)</tt> </tt>
<a name="L98"></a><tt class="py-lineno"> 98</tt>  <tt class="py-line">    <tt id="link-29" class="py-name" targets="Variable db.test.r=db.test-module.html#r,Variable db.test_xml.r=db.test_xml-module.html#r"><a title="db.test.r
db.test_xml.r" class="py-name" href="#" onclick="return doclink('link-29', 'r', 'link-29');">r</a></tt> <tt class="py-op">=</tt> <tt class="py-name">rs</tt><tt class="py-op">[</tt><tt class="py-name">number</tt><tt class="py-op">]</tt> </tt>
<a name="L99"></a><tt class="py-lineno"> 99</tt>  <tt class="py-line">    <tt class="py-name">result</tt> <tt class="py-op">=</tt> <tt class="py-op">{</tt><tt class="py-op">}</tt> </tt>
<a name="L100"></a><tt class="py-lineno">100</tt>  <tt class="py-line">    <tt class="py-keyword">for</tt> <tt class="py-name">c</tt> <tt class="py-keyword">in</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">fieldsList</tt><tt class="py-op">:</tt> </tt>
<a name="L101"></a><tt class="py-lineno">101</tt>  <tt class="py-line">      <tt class="py-name">result</tt><tt class="py-op">[</tt><tt class="py-name">c</tt><tt class="py-op">]</tt> <tt class="py-op">=</tt> <tt id="link-30" class="py-name"><a title="db.test.r
db.test_xml.r" class="py-name" href="#" onclick="return doclink('link-30', 'r', 'link-29');">r</a></tt><tt class="py-op">.</tt><tt class="py-name">getElementsByTagName</tt><tt class="py-op">(</tt><tt class="py-name">c</tt><tt class="py-op">)</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">.</tt><tt class="py-name">firstChild</tt><tt class="py-op">.</tt><tt class="py-name">data</tt> </tt>
<a name="L102"></a><tt class="py-lineno">102</tt>  <tt class="py-line">    <tt class="py-keyword">return</tt> <tt class="py-name">result</tt> </tt>
</div><a name="L103"></a><tt class="py-lineno">103</tt>  <tt class="py-line">   </tt>
<a name="xmlReader.getScheme"></a><div id="xmlReader.getScheme-def"><a name="L104"></a><tt class="py-lineno">104</tt> <a class="py-toggle" href="#" id="xmlReader.getScheme-toggle" onclick="return toggle('xmlReader.getScheme');">-</a><tt class="py-line">  <tt class="py-keyword">def</tt> <a class="py-def-name" href="db.parser_minidom.xmlReader-class.html#getScheme">getScheme</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="xmlReader.getScheme-collapsed" style="display:none;" pad="+++" indent="++++++"></div><div id="xmlReader.getScheme-expanded"><a name="L105"></a><tt class="py-lineno">105</tt>  <tt class="py-line">    <tt class="py-name">result</tt> <tt class="py-op">=</tt> <tt class="py-op">{</tt><tt class="py-op">}</tt> </tt>
<a name="L106"></a><tt class="py-lineno">106</tt>  <tt class="py-line">    <tt class="py-keyword">for</tt> <tt class="py-name">i</tt> <tt class="py-keyword">in</tt> <tt class="py-name">range</tt><tt class="py-op">(</tt><tt class="py-name">len</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">fieldsList</tt><tt class="py-op">)</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L107"></a><tt class="py-lineno">107</tt>  <tt class="py-line">      <tt class="py-name">result</tt><tt class="py-op">[</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">fieldsList</tt><tt class="py-op">[</tt><tt class="py-name">i</tt><tt class="py-op">]</tt><tt class="py-op">]</tt><tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">fieldsTypeList</tt><tt class="py-op">[</tt><tt class="py-name">i</tt><tt class="py-op">]</tt> </tt>
<a name="L108"></a><tt class="py-lineno">108</tt>  <tt class="py-line">    <tt class="py-keyword">return</tt> <tt class="py-name">result</tt> </tt>
</div><a name="L109"></a><tt class="py-lineno">109</tt>  <tt class="py-line"> </tt>
<a name="xmlReader.getId"></a><div id="xmlReader.getId-def"><a name="L110"></a><tt class="py-lineno">110</tt> <a class="py-toggle" href="#" id="xmlReader.getId-toggle" onclick="return toggle('xmlReader.getId');">-</a><tt class="py-line">  <tt class="py-keyword">def</tt> <a class="py-def-name" href="db.parser_minidom.xmlReader-class.html#getId">getId</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="xmlReader.getId-collapsed" style="display:none;" pad="+++" indent="++++++"></div><div id="xmlReader.getId-expanded"><a name="L111"></a><tt class="py-lineno">111</tt>  <tt class="py-line">    <tt class="py-keyword">return</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">id</tt> </tt>
</div><a name="L112"></a><tt class="py-lineno">112</tt>  <tt class="py-line">   </tt>
<a name="L113"></a><tt class="py-lineno">113</tt>  <tt class="py-line">  <tt class="py-comment">## s is typed accordingly to schema[c]</tt> </tt>
<a name="L114"></a><tt class="py-lineno">114</tt>  <tt class="py-line"><tt class="py-comment"></tt>  <tt class="py-comment"># on type s en fonction de schema[c]</tt> </tt>
<a name="xmlReader.typage"></a><div id="xmlReader.typage-def"><a name="L115"></a><tt class="py-lineno">115</tt> <a class="py-toggle" href="#" id="xmlReader.typage-toggle" onclick="return toggle('xmlReader.typage');">-</a><tt class="py-line"><tt class="py-comment"></tt>  <tt class="py-keyword">def</tt> <a class="py-def-name" href="db.parser_minidom.xmlReader-class.html#typage">typage</a><tt class="py-op">(</tt><tt class="py-param">schema</tt><tt class="py-op">,</tt><tt class="py-param">c</tt><tt class="py-op">,</tt><tt class="py-param">s</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="xmlReader.typage-collapsed" style="display:none;" pad="+++" indent="++++++"></div><div id="xmlReader.typage-expanded"><a name="L116"></a><tt class="py-lineno">116</tt>  <tt class="py-line">    <tt class="py-keyword">return</tt> <tt class="py-name">s</tt> </tt>
</div><a name="L117"></a><tt class="py-lineno">117</tt>  <tt class="py-line"> </tt>
<a name="L118"></a><tt class="py-lineno">118</tt>  <tt class="py-line">  <tt class="py-comment">## Table is filled in dynamic representation</tt> </tt>
<a name="L119"></a><tt class="py-lineno">119</tt>  <tt class="py-line"><tt class="py-comment"></tt>  <tt class="py-comment">## First element of the list is the table scheme</tt> </tt>
<a name="L120"></a><tt class="py-lineno">120</tt>  <tt class="py-line"><tt class="py-comment"></tt>  <tt class="py-comment"># on remplit la table en repr&#233;sentation dynamique</tt> </tt>
<a name="L121"></a><tt class="py-lineno">121</tt>  <tt class="py-line"><tt class="py-comment"></tt>  <tt class="py-comment"># le premier element de la liste est le sch&#233;ma de la table</tt> </tt>
<a name="xmlReader.fillTable"></a><div id="xmlReader.fillTable-def"><a name="L122"></a><tt class="py-lineno">122</tt> <a class="py-toggle" href="#" id="xmlReader.fillTable-toggle" onclick="return toggle('xmlReader.fillTable');">-</a><tt class="py-line"><tt class="py-comment"></tt>  <tt class="py-keyword">def</tt> <a class="py-def-name" href="db.parser_minidom.xmlReader-class.html#fillTable">fillTable</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="xmlReader.fillTable-collapsed" style="display:none;" pad="+++" indent="++++++"></div><div id="xmlReader.fillTable-expanded"><a name="L123"></a><tt class="py-lineno">123</tt>  <tt class="py-line">    <tt class="py-name">rs</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-31" class="py-name"><a title="db.db_interface.IDB.table
db.db_sql.SQL_DB.table
db.db_xml.DBXML.table
db.test.table
db.test_xml.table" class="py-name" href="#" onclick="return doclink('link-31', 'table', 'link-17');">table</a></tt><tt class="py-op">.</tt><tt class="py-name">getElementsByTagName</tt><tt class="py-op">(</tt><tt class="py-string">"record"</tt><tt class="py-op">)</tt> </tt>
<a name="L124"></a><tt class="py-lineno">124</tt>  <tt class="py-line">    <tt id="link-32" class="py-name"><a title="db.db_interface.IDBTable.schema" class="py-name" href="#" onclick="return doclink('link-32', 'schema', 'link-15');">schema</a></tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-33" class="py-name" targets="Method db.parser_minidom.xmlReader.getScheme()=db.parser_minidom.xmlReader-class.html#getScheme"><a title="db.parser_minidom.xmlReader.getScheme" class="py-name" href="#" onclick="return doclink('link-33', 'getScheme', 'link-33');">getScheme</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L125"></a><tt class="py-lineno">125</tt>  <tt class="py-line">    <tt class="py-name">result</tt> <tt class="py-op">=</tt> <tt class="py-op">[</tt><tt id="link-34" class="py-name"><a title="db.db_interface.IDBTable.schema" class="py-name" href="#" onclick="return doclink('link-34', 'schema', 'link-15');">schema</a></tt><tt class="py-op">]</tt> </tt>
<a name="L126"></a><tt class="py-lineno">126</tt>  <tt class="py-line">    <tt class="py-keyword">for</tt> <tt id="link-35" class="py-name" targets="Method db.parser_minidom.xmlReader.record()=db.parser_minidom.xmlReader-class.html#record"><a title="db.parser_minidom.xmlReader.record" class="py-name" href="#" onclick="return doclink('link-35', 'record', 'link-35');">record</a></tt> <tt class="py-keyword">in</tt> <tt class="py-name">rs</tt><tt class="py-op">:</tt> </tt>
<a name="L127"></a><tt class="py-lineno">127</tt>  <tt class="py-line">      <tt class="py-name">tmp</tt> <tt class="py-op">=</tt> <tt class="py-op">{</tt><tt class="py-op">}</tt> </tt>
<a name="L128"></a><tt class="py-lineno">128</tt>  <tt class="py-line">      <tt class="py-keyword">for</tt> <tt class="py-name">c</tt> <tt class="py-keyword">in</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">fieldsList</tt><tt class="py-op">:</tt> </tt>
<a name="L129"></a><tt class="py-lineno">129</tt>  <tt class="py-line">        <tt class="py-name">liste</tt> <tt class="py-op">=</tt> <tt id="link-36" class="py-name"><a title="db.parser_minidom.xmlReader.record" class="py-name" href="#" onclick="return doclink('link-36', 'record', 'link-35');">record</a></tt><tt class="py-op">.</tt><tt class="py-name">getElementsByTagName</tt><tt class="py-op">(</tt><tt class="py-name">c</tt><tt class="py-op">)</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">.</tt><tt class="py-name">childNodes</tt> </tt>
<a name="L130"></a><tt class="py-lineno">130</tt>  <tt class="py-line">        <tt class="py-name">chaine</tt> <tt class="py-op">=</tt> <tt id="link-37" class="py-name" targets="Function db.parser_minidom.getAllChildrenContent()=db.parser_minidom-module.html#getAllChildrenContent"><a title="db.parser_minidom.getAllChildrenContent" class="py-name" href="#" onclick="return doclink('link-37', 'getAllChildrenContent', 'link-37');">getAllChildrenContent</a></tt><tt class="py-op">(</tt><tt class="py-name">liste</tt><tt class="py-op">)</tt> </tt>
<a name="L131"></a><tt class="py-lineno">131</tt>  <tt class="py-line">        <tt class="py-name">chaine</tt> <tt class="py-op">=</tt> <tt id="link-38" class="py-name"><a title="db.encode.DecodeReading" class="py-name" href="#" onclick="return doclink('link-38', 'DecodeReading', 'link-2');">DecodeReading</a></tt><tt class="py-op">(</tt><tt id="link-39" class="py-name" targets="Function db.parser_minidom.clean_string()=db.parser_minidom-module.html#clean_string"><a title="db.parser_minidom.clean_string" class="py-name" href="#" onclick="return doclink('link-39', 'clean_string', 'link-39');">clean_string</a></tt><tt class="py-op">(</tt><tt class="py-name">chaine</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L132"></a><tt class="py-lineno">132</tt>  <tt class="py-line">        <tt class="py-name">tmp</tt><tt class="py-op">[</tt><tt class="py-name">c</tt><tt class="py-op">]</tt> <tt class="py-op">=</tt> <tt id="link-40" class="py-name" targets="Function db.parser_minidom.typage()=db.parser_minidom-module.html#typage,Method db.parser_minidom.xmlReader.typage()=db.parser_minidom.xmlReader-class.html#typage"><a title="db.parser_minidom.typage
db.parser_minidom.xmlReader.typage" class="py-name" href="#" onclick="return doclink('link-40', 'typage', 'link-40');">typage</a></tt><tt class="py-op">(</tt><tt id="link-41" class="py-name"><a title="db.db_interface.IDBTable.schema" class="py-name" href="#" onclick="return doclink('link-41', 'schema', 'link-15');">schema</a></tt><tt class="py-op">,</tt><tt class="py-name">c</tt><tt class="py-op">,</tt><tt class="py-name">chaine</tt><tt class="py-op">)</tt> </tt>
<a name="L133"></a><tt class="py-lineno">133</tt>  <tt class="py-line">      <tt class="py-name">tmp</tt><tt class="py-op">[</tt><tt class="py-string">"id"</tt><tt class="py-op">]</tt> <tt class="py-op">=</tt> <tt class="py-name">int</tt><tt class="py-op">(</tt><tt id="link-42" class="py-name"><a title="db.parser_minidom.xmlReader.record" class="py-name" href="#" onclick="return doclink('link-42', 'record', 'link-35');">record</a></tt><tt class="py-op">.</tt><tt class="py-name">attributes</tt><tt class="py-op">[</tt><tt class="py-string">"id"</tt><tt class="py-op">]</tt><tt class="py-op">.</tt><tt class="py-name">value</tt><tt class="py-op">)</tt> </tt>
<a name="L134"></a><tt class="py-lineno">134</tt>  <tt class="py-line">      <tt class="py-name">result</tt><tt class="py-op">.</tt><tt class="py-name">append</tt><tt class="py-op">(</tt><tt class="py-name">tmp</tt><tt class="py-op">)</tt> </tt>
<a name="L135"></a><tt class="py-lineno">135</tt>  <tt class="py-line">    <tt class="py-keyword">return</tt> <tt class="py-name">result</tt> </tt>
</div></div><a name="L136"></a><tt class="py-lineno">136</tt>  <tt class="py-line"> </tt>
<a name="L137"></a><tt class="py-lineno">137</tt>  <tt class="py-line"> </tt>
<a name="L138"></a><tt class="py-lineno">138</tt>  <tt class="py-line"><tt class="py-comment">## Table list is transformed into xml before being saved to table file</tt> </tt>
<a name="L139"></a><tt class="py-lineno">139</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># on r&#233;cup&#232;re la liste table est on la passe en xml avant de la sauvegarder</tt> </tt>
<a name="L140"></a><tt class="py-lineno">140</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># dans le fichier table</tt> </tt>
<a name="xmlWriter"></a><div id="xmlWriter-def"><a name="L141"></a><tt class="py-lineno">141</tt> <a class="py-toggle" href="#" id="xmlWriter-toggle" onclick="return toggle('xmlWriter');">-</a><tt class="py-line"><tt class="py-comment"></tt><tt class="py-keyword">class</tt> <a class="py-def-name" href="db.parser_minidom.xmlWriter-class.html">xmlWriter</a><tt class="py-op">:</tt> </tt>
</div><div id="xmlWriter-collapsed" style="display:none;" pad="+++" indent="++++"></div><div id="xmlWriter-expanded"><a name="L142"></a><tt class="py-lineno">142</tt>  <tt class="py-line">  <tt class="py-docstring">""" objet d'ecriture du fichier xml &#224; partir de la representation dynamique de la table """</tt> </tt>
<a name="xmlWriter.__init__"></a><div id="xmlWriter.__init__-def"><a name="L143"></a><tt class="py-lineno">143</tt> <a class="py-toggle" href="#" id="xmlWriter.__init__-toggle" onclick="return toggle('xmlWriter.__init__');">-</a><tt class="py-line">  <tt class="py-keyword">def</tt> <a class="py-def-name" href="db.parser_minidom.xmlWriter-class.html#__init__">__init__</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt><tt class="py-param">name</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="xmlWriter.__init__-collapsed" style="display:none;" pad="+++" indent="++++++"></div><div id="xmlWriter.__init__-expanded"><a name="L144"></a><tt class="py-lineno">144</tt>  <tt class="py-line">    <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">name</tt> <tt class="py-op">=</tt> <tt class="py-name">name</tt> </tt>
<a name="L145"></a><tt class="py-lineno">145</tt>  <tt class="py-line">    <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">id</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
</div><a name="L146"></a><tt class="py-lineno">146</tt>  <tt class="py-line"> </tt>
<a name="xmlWriter.commit"></a><div id="xmlWriter.commit-def"><a name="L147"></a><tt class="py-lineno">147</tt> <a class="py-toggle" href="#" id="xmlWriter.commit-toggle" onclick="return toggle('xmlWriter.commit');">-</a><tt class="py-line">  <tt class="py-keyword">def</tt> <a class="py-def-name" href="db.parser_minidom.xmlWriter-class.html#commit">commit</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt><tt class="py-param">table</tt><tt class="py-op">,</tt><tt class="py-param">info</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="xmlWriter.commit-collapsed" style="display:none;" pad="+++" indent="++++++"></div><div id="xmlWriter.commit-expanded"><a name="L148"></a><tt class="py-lineno">148</tt>  <tt class="py-line">    <tt class="py-comment">## xml saving</tt> </tt>
<a name="L149"></a><tt class="py-lineno">149</tt>  <tt class="py-line"><tt class="py-comment"></tt>    <tt class="py-comment"># sauvegarde xml</tt> </tt>
<a name="L150"></a><tt class="py-lineno">150</tt>  <tt class="py-line"><tt class="py-comment"></tt>    <tt id="link-43" class="py-name" targets="Method interface.synchronize._finder.save()=interface.synchronize._finder-class.html#save"><a title="interface.synchronize._finder.save" class="py-name" href="#" onclick="return doclink('link-43', 'save', 'link-43');">save</a></tt> <tt class="py-op">=</tt> <tt class="py-name">minidom</tt><tt class="py-op">.</tt><tt class="py-name">Document</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L151"></a><tt class="py-lineno">151</tt>  <tt class="py-line">    <tt class="py-comment">## List of fields contained in the first recording</tt> </tt>
<a name="L152"></a><tt class="py-lineno">152</tt>  <tt class="py-line"><tt class="py-comment"></tt>    <tt class="py-comment"># liste des champs contenu dans le premier enregistrement</tt> </tt>
<a name="L153"></a><tt class="py-lineno">153</tt>  <tt class="py-line"><tt class="py-comment"></tt>    <tt class="py-name">fieldsDescriptor</tt> <tt class="py-op">=</tt> <tt id="link-44" class="py-name"><a title="db.db_interface.IDB.table
db.db_sql.SQL_DB.table
db.db_xml.DBXML.table
db.test.table
db.test_xml.table" class="py-name" href="#" onclick="return doclink('link-44', 'table', 'link-17');">table</a></tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt> </tt>
<a name="L154"></a><tt class="py-lineno">154</tt>  <tt class="py-line">    <tt class="py-name">fieldsList</tt> <tt class="py-op">=</tt> <tt class="py-name">fieldsDescriptor</tt><tt class="py-op">.</tt><tt class="py-name">keys</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L155"></a><tt class="py-lineno">155</tt>  <tt class="py-line">    <tt class="py-keyword">try</tt><tt class="py-op">:</tt> </tt>
<a name="L156"></a><tt class="py-lineno">156</tt>  <tt class="py-line">      <tt class="py-name">fieldsString</tt> <tt class="py-op">=</tt> <tt class="py-name">fieldsList</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt> </tt>
<a name="L157"></a><tt class="py-lineno">157</tt>  <tt class="py-line">      <tt class="py-name">fieldsTypeString</tt> <tt class="py-op">=</tt> <tt class="py-name">fieldsDescriptor</tt><tt class="py-op">[</tt><tt class="py-name">fieldsList</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">]</tt> </tt>
<a name="L158"></a><tt class="py-lineno">158</tt>  <tt class="py-line">    <tt class="py-keyword">except</tt><tt class="py-op">:</tt> </tt>
<a name="L159"></a><tt class="py-lineno">159</tt>  <tt class="py-line">      <tt class="py-keyword">print</tt> <tt class="py-string">"la table ne contient aucun champ"</tt> <tt class="py-comment">## gettext</tt> </tt>
<a name="L160"></a><tt class="py-lineno">160</tt>  <tt class="py-line">    <tt class="py-keyword">for</tt> <tt class="py-name">field</tt> <tt class="py-keyword">in</tt> <tt class="py-name">fieldsList</tt><tt class="py-op">[</tt><tt class="py-number">1</tt><tt class="py-op">:</tt><tt class="py-op">]</tt><tt class="py-op">:</tt> </tt>
<a name="L161"></a><tt class="py-lineno">161</tt>  <tt class="py-line">      <tt class="py-name">fieldsString</tt> <tt class="py-op">+=</tt> <tt class="py-op">(</tt><tt class="py-string">","</tt> <tt class="py-op">+</tt> <tt class="py-name">field</tt><tt class="py-op">)</tt> </tt>
<a name="L162"></a><tt class="py-lineno">162</tt>  <tt class="py-line">      <tt class="py-name">fieldsTypeString</tt> <tt class="py-op">+=</tt> <tt class="py-op">(</tt><tt class="py-string">","</tt> <tt class="py-op">+</tt> <tt class="py-name">fieldsDescriptor</tt><tt class="py-op">[</tt><tt class="py-name">field</tt><tt class="py-op">]</tt><tt class="py-op">)</tt> </tt>
<a name="L163"></a><tt class="py-lineno">163</tt>  <tt class="py-line">    <tt class="py-comment">## Creation of table node</tt> </tt>
<a name="L164"></a><tt class="py-lineno">164</tt>  <tt class="py-line"><tt class="py-comment"></tt>    <tt class="py-comment"># creation du noeud table</tt> </tt>
<a name="L165"></a><tt class="py-lineno">165</tt>  <tt class="py-line"><tt class="py-comment"></tt>    <tt class="py-name">tableNode</tt> <tt class="py-op">=</tt> <tt id="link-45" class="py-name"><a title="interface.synchronize._finder.save" class="py-name" href="#" onclick="return doclink('link-45', 'save', 'link-43');">save</a></tt><tt class="py-op">.</tt><tt class="py-name">createElement</tt><tt class="py-op">(</tt><tt class="py-string">"table"</tt><tt class="py-op">)</tt> </tt>
<a name="L166"></a><tt class="py-lineno">166</tt>  <tt class="py-line">    <tt class="py-name">tableNode</tt><tt class="py-op">.</tt><tt class="py-name">setAttribute</tt><tt class="py-op">(</tt><tt class="py-string">"fields"</tt><tt class="py-op">,</tt><tt class="py-name">fieldsString</tt><tt class="py-op">)</tt> </tt>
<a name="L167"></a><tt class="py-lineno">167</tt>  <tt class="py-line">    <tt class="py-name">tableNode</tt><tt class="py-op">.</tt><tt class="py-name">setAttribute</tt><tt class="py-op">(</tt><tt class="py-string">"types"</tt><tt class="py-op">,</tt><tt class="py-name">fieldsTypeString</tt><tt class="py-op">)</tt> </tt>
<a name="L168"></a><tt class="py-lineno">168</tt>  <tt class="py-line">    <tt class="py-name">tableNode</tt><tt class="py-op">.</tt><tt class="py-name">setAttribute</tt><tt class="py-op">(</tt><tt class="py-string">"id"</tt><tt class="py-op">,</tt><tt class="py-name">str</tt><tt class="py-op">(</tt><tt class="py-name">info</tt><tt class="py-op">[</tt><tt class="py-string">"id"</tt><tt class="py-op">]</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L169"></a><tt class="py-lineno">169</tt>  <tt class="py-line">    <tt id="link-46" class="py-name"><a title="interface.synchronize._finder.save" class="py-name" href="#" onclick="return doclink('link-46', 'save', 'link-43');">save</a></tt><tt class="py-op">.</tt><tt class="py-name">appendChild</tt><tt class="py-op">(</tt><tt class="py-name">tableNode</tt><tt class="py-op">)</tt> </tt>
<a name="L170"></a><tt class="py-lineno">170</tt>  <tt class="py-line">    <tt class="py-comment">## Creation of a marker record for every recording of the table</tt> </tt>
<a name="L171"></a><tt class="py-lineno">171</tt>  <tt class="py-line"><tt class="py-comment"></tt>    <tt class="py-comment">## but the first element of the table which is not a record</tt> </tt>
<a name="L172"></a><tt class="py-lineno">172</tt>  <tt class="py-line"><tt class="py-comment"></tt>    <tt class="py-comment"># on cree une balise record pour chaque enregsitrement</tt> </tt>
<a name="L173"></a><tt class="py-lineno">173</tt>  <tt class="py-line"><tt class="py-comment"></tt>    <tt class="py-comment"># de la table, en ne tenant pas compte du premier elt</tt> </tt>
<a name="L174"></a><tt class="py-lineno">174</tt>  <tt class="py-line"><tt class="py-comment"></tt>    <tt class="py-comment"># de la liste table qui n'est pas un record.</tt> </tt>
<a name="L175"></a><tt class="py-lineno">175</tt>  <tt class="py-line"><tt class="py-comment"></tt>    <tt class="py-keyword">for</tt> <tt id="link-47" class="py-name"><a title="db.parser_minidom.xmlReader.record" class="py-name" href="#" onclick="return doclink('link-47', 'record', 'link-35');">record</a></tt> <tt class="py-keyword">in</tt> <tt id="link-48" class="py-name"><a title="db.db_interface.IDB.table
db.db_sql.SQL_DB.table
db.db_xml.DBXML.table
db.test.table
db.test_xml.table" class="py-name" href="#" onclick="return doclink('link-48', 'table', 'link-17');">table</a></tt><tt class="py-op">[</tt><tt class="py-number">1</tt><tt class="py-op">:</tt><tt class="py-op">]</tt><tt class="py-op">:</tt> </tt>
<a name="L176"></a><tt class="py-lineno">176</tt>  <tt class="py-line">      <tt class="py-keyword">print</tt> <tt class="py-string">"ok1"</tt> </tt>
<a name="L177"></a><tt class="py-lineno">177</tt>  <tt class="py-line">      <tt class="py-name">rc</tt> <tt class="py-op">=</tt> <tt id="link-49" class="py-name"><a title="interface.synchronize._finder.save" class="py-name" href="#" onclick="return doclink('link-49', 'save', 'link-43');">save</a></tt><tt class="py-op">.</tt><tt class="py-name">createElement</tt><tt class="py-op">(</tt><tt class="py-string">"record"</tt><tt class="py-op">)</tt> </tt>
<a name="L178"></a><tt class="py-lineno">178</tt>  <tt class="py-line">      <tt class="py-name">id</tt> <tt class="py-op">=</tt> <tt class="py-name">str</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">id</tt><tt class="py-op">)</tt> </tt>
<a name="L179"></a><tt class="py-lineno">179</tt>  <tt class="py-line">      <tt class="py-keyword">print</tt> <tt class="py-name">id</tt> </tt>
<a name="L180"></a><tt class="py-lineno">180</tt>  <tt class="py-line">      <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">id</tt> <tt class="py-op">+=</tt> <tt class="py-number">1</tt> </tt>
<a name="L181"></a><tt class="py-lineno">181</tt>  <tt class="py-line">      <tt class="py-name">rc</tt><tt class="py-op">.</tt><tt class="py-name">setAttribute</tt><tt class="py-op">(</tt><tt class="py-string">"id"</tt><tt class="py-op">,</tt><tt class="py-name">id</tt><tt class="py-op">)</tt> </tt>
<a name="L182"></a><tt class="py-lineno">182</tt>  <tt class="py-line">      <tt class="py-name">tableNode</tt><tt class="py-op">.</tt><tt class="py-name">appendChild</tt><tt class="py-op">(</tt><tt class="py-name">rc</tt><tt class="py-op">)</tt> </tt>
<a name="L183"></a><tt class="py-lineno">183</tt>  <tt class="py-line">      <tt class="py-comment">## Creation of fields markers</tt> </tt>
<a name="L184"></a><tt class="py-lineno">184</tt>  <tt class="py-line"><tt class="py-comment"></tt>      <tt class="py-comment">## together with the text content</tt> </tt>
<a name="L185"></a><tt class="py-lineno">185</tt>  <tt class="py-line"><tt class="py-comment"></tt>      <tt class="py-comment"># on cree les balises de champs</tt> </tt>
<a name="L186"></a><tt class="py-lineno">186</tt>  <tt class="py-line"><tt class="py-comment"></tt>      <tt class="py-comment"># ainsi que le texte qu'elles contiennent</tt> </tt>
<a name="L187"></a><tt class="py-lineno">187</tt>  <tt class="py-line"><tt class="py-comment"></tt>      <tt class="py-keyword">for</tt> <tt class="py-name">field</tt> <tt class="py-keyword">in</tt> <tt class="py-name">fieldsList</tt><tt class="py-op">:</tt> </tt>
<a name="L188"></a><tt class="py-lineno">188</tt>  <tt class="py-line">        <tt class="py-name">c</tt> <tt class="py-op">=</tt> <tt id="link-50" class="py-name"><a title="interface.synchronize._finder.save" class="py-name" href="#" onclick="return doclink('link-50', 'save', 'link-43');">save</a></tt><tt class="py-op">.</tt><tt class="py-name">createElement</tt><tt class="py-op">(</tt><tt class="py-name">str</tt><tt class="py-op">(</tt><tt class="py-name">field</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L189"></a><tt class="py-lineno">189</tt>  <tt class="py-line">        <tt class="py-name">rc</tt><tt class="py-op">.</tt><tt class="py-name">appendChild</tt><tt class="py-op">(</tt><tt class="py-name">c</tt><tt class="py-op">)</tt> </tt>
<a name="L190"></a><tt class="py-lineno">190</tt>  <tt class="py-line">        <tt class="py-name">text</tt> <tt class="py-op">=</tt> <tt id="link-51" class="py-name"><a title="interface.synchronize._finder.save" class="py-name" href="#" onclick="return doclink('link-51', 'save', 'link-43');">save</a></tt><tt class="py-op">.</tt><tt class="py-name">createTextNode</tt><tt class="py-op">(</tt><tt id="link-52" class="py-name"><a title="db.encode.EncodeToWrite" class="py-name" href="#" onclick="return doclink('link-52', 'EncodeToWrite', 'link-1');">EncodeToWrite</a></tt><tt class="py-op">(</tt><tt id="link-53" class="py-name"><a title="db.parser_minidom.xmlReader.record" class="py-name" href="#" onclick="return doclink('link-53', 'record', 'link-35');">record</a></tt><tt class="py-op">[</tt><tt class="py-name">field</tt><tt class="py-op">]</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L191"></a><tt class="py-lineno">191</tt>  <tt class="py-line">        <tt class="py-name">c</tt><tt class="py-op">.</tt><tt class="py-name">appendChild</tt><tt class="py-op">(</tt><tt class="py-name">text</tt><tt class="py-op">)</tt> </tt>
<a name="L192"></a><tt class="py-lineno">192</tt>  <tt class="py-line">      <tt class="py-comment">## Making of a backup file of previous version</tt> </tt>
<a name="L193"></a><tt class="py-lineno">193</tt>  <tt class="py-line"><tt class="py-comment"></tt>      <tt class="py-comment"># on fait un fichier de backup de la version pr&#233;c&#233;dente</tt> </tt>
<a name="L194"></a><tt class="py-lineno">194</tt>  <tt class="py-line"><tt class="py-comment"></tt>      <tt class="py-name">back</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">name</tt> <tt class="py-op">+</tt> <tt class="py-string">"_back"</tt> </tt>
<a name="L195"></a><tt class="py-lineno">195</tt>  <tt class="py-line">    <tt class="py-keyword">try</tt><tt class="py-op">:</tt> </tt>
<a name="L196"></a><tt class="py-lineno">196</tt>  <tt class="py-line">      <tt class="py-name">rename</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">name</tt><tt class="py-op">,</tt><tt class="py-name">back</tt><tt class="py-op">)</tt> </tt>
<a name="L197"></a><tt class="py-lineno">197</tt>  <tt class="py-line">    <tt class="py-keyword">except</tt><tt class="py-op">:</tt> </tt>
<a name="L198"></a><tt class="py-lineno">198</tt>  <tt class="py-line">      <tt class="py-keyword">print</tt> <tt class="py-string">"le fichier de sauvegarde &#233;tait inexistant"</tt> <tt class="py-comment">## _ for gettext</tt> </tt>
<a name="L199"></a><tt class="py-lineno">199</tt>  <tt class="py-line">    <tt class="py-keyword">try</tt><tt class="py-op">:</tt> </tt>
<a name="L200"></a><tt class="py-lineno">200</tt>  <tt class="py-line">      <tt class="py-name">texte</tt> <tt class="py-op">=</tt> <tt id="link-54" class="py-name"><a title="interface.synchronize._finder.save" class="py-name" href="#" onclick="return doclink('link-54', 'save', 'link-43');">save</a></tt><tt class="py-op">.</tt><tt class="py-name">toprettyxml</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L201"></a><tt class="py-lineno">201</tt>  <tt class="py-line">    <tt class="py-keyword">except</tt><tt class="py-op">:</tt> </tt>
<a name="L202"></a><tt class="py-lineno">202</tt>  <tt class="py-line">      <tt class="py-keyword">print</tt> <tt class="py-string">"la transformation to prettyxml() n'a pas fonctionn&#233;"</tt> </tt>
<a name="L203"></a><tt class="py-lineno">203</tt>  <tt class="py-line">    <tt class="py-keyword">print</tt> <tt class="py-string">"suite de la sauvegarde"</tt> </tt>
<a name="L204"></a><tt class="py-lineno">204</tt>  <tt class="py-line">    <tt class="py-name">save_file</tt> <tt class="py-op">=</tt> <tt class="py-name">open</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">name</tt><tt class="py-op">,</tt><tt class="py-string">"w"</tt><tt class="py-op">)</tt> </tt>
<a name="L205"></a><tt class="py-lineno">205</tt>  <tt class="py-line">    <tt class="py-name">save_file</tt><tt class="py-op">.</tt><tt class="py-name">write</tt><tt class="py-op">(</tt><tt id="link-55" class="py-name"><a title="interface.synchronize._finder.save" class="py-name" href="#" onclick="return doclink('link-55', 'save', 'link-43');">save</a></tt><tt class="py-op">.</tt><tt class="py-name">toprettyxml</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L206"></a><tt class="py-lineno">206</tt>  <tt class="py-line">    <tt class="py-name">save_file</tt><tt class="py-op">.</tt><tt id="link-56" class="py-name" targets="Method db.db_sql.SQL_DB.close()=db.db_sql.SQL_DB-class.html#close"><a title="db.db_sql.SQL_DB.close" class="py-name" href="#" onclick="return doclink('link-56', 'close', 'link-56');">close</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L207"></a><tt class="py-lineno">207</tt>  <tt class="py-line">    <tt class="py-keyword">return</tt> <tt class="py-number">0</tt> </tt>
</div></div><a name="L208"></a><tt class="py-lineno">208</tt>  <tt class="py-line"> </tt><script type="text/javascript">
<!--
expandto(location.href);
// -->
</script>
</pre>
<br />
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Project homepage -->
      <th class="navbar" align="right" width="100%">
        <table border="0" cellpadding="0" cellspacing="0">
          <tr><th class="navbar" align="center"
            ><a class="navbar" target="_top" href="http://graal.ens-lyon.fr/comfort/">CoMFoRT</a></th>
          </tr></table></th>
  </tr>
</table>
<table border="0" cellpadding="0" cellspacing="0" width="100%%">
  <tr>
    <td align="left" class="footer">
    Generated by Epydoc 3.0.1 on Sun May 25 15:42:47 2008
    </td>
    <td align="right" class="footer">
      <a target="mainFrame" href="http://epydoc.sourceforge.net"
        >http://epydoc.sourceforge.net</a>
    </td>
  </tr>
</table>

<script type="text/javascript">
  <!--
  // Private objects are initially displayed (because if
  // javascript is turned off then we want them to be
  // visible); but by default, we want to hide them.  So hide
  // them unless we have a cookie that says to show them.
  checkCookie();
  // -->
</script>
</body>
</html>
